rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // User profiles
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Events - Allow public read access and test event creation
    match /events/{eventId} {
      allow read: if true;  // Allow public read access
      allow create: if true;  // Allow creating events without auth for testing
      allow update, delete: if request.auth != null && 
        get(/databases/$(database)/documents/events/$(eventId)).data.organizerId == request.auth.uid;
    }
    
    // Bookings
    match /bookings/{bookingId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        get(/databases/$(database)/documents/bookings/$(bookingId)).data.userId == request.auth.uid;
    }
    
    // Allow read access to categories collection
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    // Allow read access to locations collection
    match /locations/{locationId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    // Default deny for other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 